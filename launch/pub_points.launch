<launch>

<arg name="camera" default="camera" />

<!-- start sensor-->
<include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="camera" default="$(arg camera)"/>
</include>

<!-- <node pkg="tf" type="static_transform_publisher" name="camera_optical_link" args="0.03 0.1 0.5 -1.571 0 -1.5707963268 base_link camera_depth_optical 10" /> -->

<node pkg="tf" type="static_transform_publisher" name="camera_link_to_base_link1" args="0.0 0.0 0.0 0.0 0.0 3.1415926 base_link1 camera_link 25" />

<node pkg="tf" type="static_transform_publisher" name="base_link_to_base_link1" args="0.03 -0.1 0.52 0.0 0.0 0.0 base_link base_link1 25" />

<!--
<node pkg="pub_tf" type="pub_tf" name="pub_tf" > 
    
    <param name="/Origin_X" type="double" value="0.0" />
    <param name="/Origin_Y" type="double" value="0.0" />
    <param name="/Origin_Z" type="double" value="0.0" /> 
    <param name="/Quaternion_R" type="double" value="0.0" />
    <param name="/Quaternion_P" type="double" value="0.0" />
    <param name="/Quaternion_Y" type="double" value="0.0" /> 
</node>
-->

<node pkg="pub_point" type="pub_point" name="pub_point" output="screen">
<!--       <remap from="input_topic" to="$(arg camera)/depth/points"/>
      <rosparam>
          base_frame: /base_link
          point_frame: camera_depth_optical
          use_VoxelGrid_DS: true
          use_passthrough_z: true
          use_passthrough_x: true
          use_rediusOut_filter: true
          
          VoxelGrid_DS: 0.01f
          passthrough_z_min: 0.0
          passthrough_z_max: 1.6
          passthrough_x_min: 0.0
          passthrough_x_max: 1.75
          rediusOut_filter_redius: 0.1
          rediusOut_filter_neighbor: 50
          frequency: 1
      </rosparam> -->
      <remap from="/input_points" to="$(arg camera)/depth/points"/>
</node>

<!--add supersonic-->
<!--<node pkg="supersonic2point" type="supersonic2point" name="supersonic2point" output="screen">
      <param name="P_Ori_x" value="0.16" />
      <param name="P_Ori_y" value="0.0" />
      <param name="P_Ori_z" value="1.18" />
      <param name="P_theta" value="30.0" />
      <remap from="/supersonic" to="/range8"/>
</node> -->

<!-- run pointcloud_to_laserscan node -->
<node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

    <remap from="cloud_in" to="/output_points"/>
    <remap from="scan" to="$(arg camera)/scan"/>
    <rosparam>
        #target_frame: # Leave disabled to output scan in pointcloud frame
        transform_tolerance: 0.05
        min_height: -1.0
        max_height: 1.5

        angle_min: -0.614 # -M_PI/2
        angle_max: 0.7314 # M_PI/2
        angle_increment: 0.01 # 0.087 # M_PI/360.0
        scan_time: 0.3333
        range_min: 0.05
        range_max: 5.0
        target_frame: base_link
        use_inf: false
        concurrency_level: 1
    </rosparam>

</node>
<node name="rviz" pkg="rviz" type="rviz" />

</launch>
